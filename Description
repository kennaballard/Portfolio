Sets
=================================
We will represent sets as an Abstract Data Type (ADT), but restrict ourselves to only sets whose elements
can be ordered.

Search 
=================================
We will used two search algorithms: depth-first search and breadth-first search

Circular linked list. 
=================================

Starting from the first person (number 1), count clockwise around the circle, to the m-th person and remove them from the circle. The circle closes up when a person is removed. Now,
count counter-clockwise around the circle to the o-th person from were you were, and remove
that person.
Repeat this process of counting and removing, switching between the clockwise and counterclockwise directions and counts. Who is the last person in the circle and what is the order in
which they are removed?


Information Retrieval
=================================
You have a collection of URLs representing online articles. You want to allow a user to search
for a term (word) among these articles and present them with a list of the relevant ones. Instead of reading the entire collection on each user search, you are going to index the articles
beforehand, that is, you will record the words used in each so the queries can return results
quickly. A collection of texts is called a corpus.
The application is split into two separate programs: Fetch and Query.


Permutations and Combinations
=================================
In this lab, we will produce permutations and combinations of a collection of elements.

Serialization
=================================
serialization and deserialization operations

Note App
=================================
A note/memo app that let's users create notes, delete notes, edit existing ones, sort by, colour code them, add reminders, etc. Stored locally on the device (if the app is closed, changes are kept).

Server Note App
=================================
Similar concept as the Note App, but a very generic UI. Implements Server functionality using Spring.io, so notes are not only stored locally on the device

Doctor Who JavaScript Game
=================================
First complete project I coded from start to finish in 2017. A simple javascript browser game that is doctor who themed, three "rooms" to complete in the game.

Integration Project
=================================
A group project in making a site using ASP.net for "movie rentals". A user can login or create an account as a customer, rent movies, rate them, etc. Sections of recommended movies based on users' past favourites.
Admins can login and have the ability to add movies to the database, genres, etc. Or make modifications to any existing ones.

Mock CPU Scheduler
=================================
Wrote a mock CPU scheduler in bash. Has priority and aging, not preemptive

Breakout Game
=================================
Simple game in Windows forms (C#). Has different difficulty modes, save high scores, bricks crack after one hit, break after two

Equation Parser
=================================
1. Asks user for two simple equations, with two unknowns
2. Solves for those two unknowns
3. If you the user enters the formulas incorrectly, parsing error (throw an
exception)
4. If the equations cannot be solved (non-invertible matrix), indicates that the equations
are not solvable.
5. If solvable, prints answer listing each variable, and the number that they represent
Example: x=15, y=3.3


Chat App Code
=================================
Code for a chatroom web application in PHP, JavaScript, HTML, CSS using Smarty Templates. Has both english and french settings, parses links and photos inserted into a message, allows you to upload a photo as avatar, blocks inserting JS in a chat, lets user login, logout, delete account, create new account, etc. 
